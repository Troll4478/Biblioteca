@page "/usuarios/nueva"
@page "/usuarios/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioUsuarios _repositorio;
<h2>@_mensaje Usuario</h2>

<EditForm Model="_usuario" FormName="frmUsuario" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_usuario.Nombre" />
            <ValidationMessage For="()=>_usuario.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtApellido" class="col-2 col-form-label">Apellido</label>
        <div class="col-10">
            <InputText id="txtApellido" class="form-control" @bind-Value="_usuario.Apellido" />
            <ValidationMessage For="()=>_usuario.Apellido" />
        </div>
    </div>
    <div class="row mb-3">
		<label for="txtCorreo" class="col-2 col-form-label">Correo</label>
		<div class="col-10">
			<InputText id="txtCorreo" class="form-control" @bind-Value="_usuario.Correo" />
			<ValidationMessage For="()=>_usuario.Correo" />
		</div>
	</div>
    <div class="row mb-3">
        <label for="txtTipoDeUsuario" class="col-2 col-form-label">Tipo de Usuario</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_usuario.TipoDeUsuarioId">
                <option value="0" enabled="enabled">Seleccione el tipo de usuario...</option>
                @foreach(TipoDeUsuario tipoDeUsuario in _tipoDeUsuarios)
                {
                    <option value="@tipoDeUsuario.Id">@tipoDeUsuario.Tipo</option>
                }
            </InputSelect>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Usuario? _usuario = new();
    private List<TipoDeUsuario> _tipoDeUsuarios = new();

    protected override async Task OnInitializedAsync()
    {
        _tipoDeUsuarios = await _repositorio.GetTipoDeUsuarios();
        if (Id > 0)
        {
            _usuario = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nuevo";
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorio.Update(Id, _usuario!);
        }
        else
        {
            await _repositorio.Add(_usuario!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/usuarios");
    }
}